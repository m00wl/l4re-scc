
INSTALL_TARGET += libgcc.a $(if $(LIBGCC_DO_SHARED),libgcc.so)

include $(L4DIR)/mk/lib.mk

define process_libgcc_generic
  $(CP) -f $(1) $(2)
endef

define process_libgcc_arm
  remove="$(filter linux-atomic.o linux-atomic-64bit.o, \
                          $(shell $(AR) t $(1)))"; \
  $(CP) -f $(1) $(2); \
  $(AR) d $(2) $$remove; \
  $(if $(L4API),$(AR) rs $(2) $\
    $(addprefix ARCH-arm/,$(if $(3),$\
      l4-atomic.s.o l4-atomic-64bit.s.o atomic_ops_s.s.o,$\
      l4-atomic.o l4-atomic-64bit.o atomic_ops_s.o);))
endef

process_libgcc = $(if $(and $(BID_COMPILER_IS_GCC),\
		            $(process_libgcc_$(ARCH))), \
                      $(process_libgcc_$(ARCH)), \
                      $(process_libgcc_generic))

ifneq ($(SYSTEM),)
all:: libgcc.a $(if $(LIBGCC_DO_SHARED),libgcc.so)
endif

libgcc.a libgcc.so: $(GENERAL_D_LOC) $(LIBGCC_LIB_DIR)/Makefile.libgcc \
		$(foreach f,$(TARGET),$(OBJS_$(f))) $(GCCLIB_HOST)
	@$(GEN_MESSAGE)
	$(VERBOSE)$(call process_libgcc,$(GCCLIB_HOST),$@,$(filter libgcc.so,$@))

clean cleanall::
	$(VERBOSE)$(RM) libgcc.a libgcc.so

GCCLIB_SO =
